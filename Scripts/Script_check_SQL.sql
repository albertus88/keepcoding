USE STAGE;

SELECT * 
FROM STG_CONTACTOS_IVR;

SELECT COUNT(*) TOTAL_REGISTROS, 
SUM(CASE WHEN BILL_REF_NO IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_BILL_REF_NO,
 COUNT( DISTINCT CASE WHEN BILL_REF_NO IS NOT NULL AND BILL_REF_NO <> '' THEN BILL_REF_NO ELSE 0 END) as TOTAL_DISTINTOS_BILL_REF
, SUM(CASE WHEN CUSTOMER_ID IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_CUSTOMER_ID
, COUNT(DISTINCT CASE WHEN CUSTOMER_ID IS NOT NULL AND CUSTOMER_ID <> '' THEN CUSTOMER_ID ELSE 0 END) as TOTAL_DISTINTOS_CUSTOMER_ID
, SUM(CASE WHEN START_DATE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_START_DATE
, COUNT(DISTINCT CASE WHEN START_DATE IS NOT NULL AND START_DATE <> '' THEN START_DATE ELSE 0 END) as TOTAL_DISTINTOS_START_DATE
, SUM(CASE WHEN END_DATE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_END_DATE
, COUNT(DISTINCT CASE WHEN END_DATE IS NOT NULL AND END_DATE <> '' THEN END_DATE ELSE 0 END) as TOTAL_DISTINTOS_END_DATE
, SUM(CASE WHEN STATEMENT_DATE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_STATEMENT_DATE
, COUNT(DISTINCT CASE WHEN STATEMENT_DATE IS NOT NULL AND STATEMENT_DATE <> '' THEN STATEMENT_DATE ELSE 0 END) as TOTAL_DISTINTOS_STATEMENT_DATE
, SUM(CASE WHEN PAYMENT_DATE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_PAYMENT_DATE
, COUNT(DISTINCT CASE WHEN PAYMENT_DATE IS NOT NULL AND PAYMENT_DATE <> '' THEN PAYMENT_DATE ELSE 0 END) as TOTAL_DISTINTOS_PAYMENT_DATE
, SUM(CASE WHEN BILL_CYCLE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_BILL_CYCLE
, COUNT(DISTINCT CASE WHEN BILL_CYCLE IS NOT NULL AND BILL_CYCLE <> '' THEN BILL_CYCLE ELSE 0 END) as TOTAL_DISTINTOS_BILL_CYCLE
, SUM(CASE WHEN AMOUNT IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_AMOUNT
, COUNT(DISTINCT CASE WHEN AMOUNT IS NOT NULL AND AMOUNT <> '' THEN AMOUNT ELSE 0 END) as TOTAL_DISTINTOS_AMOUNT
, SUM(CASE WHEN BILL_METHOD IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_BILL_METHOD
, COUNT(DISTINCT CASE WHEN BILL_METHOD IS NOT NULL AND BILL_METHOD <>  '' THEN BILL_METHOD ELSE 0 END) as TOTAL_DISTINTOS_BILL_METHOD
FROM STAGE.STG_FACTURAS_FCT;



SELECT COUNT(*) TOTAL_REGISTROS, 
SUM(CASE WHEN ID IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_ID,
 COUNT( DISTINCT CASE WHEN ID IS NOT NULL AND ID <> '' THEN ID ELSE 0 END) as TOTAL_DISTINTOS_ID
, SUM(CASE WHEN PHONE_NUMBER IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_PHONE_NUMBER
, COUNT(DISTINCT CASE WHEN PHONE_NUMBER IS NOT NULL AND PHONE_NUMBER <> '' THEN PHONE_NUMBER ELSE 0 END) as TOTAL_DISTINTOS_PHONE_NUMBER
, SUM(CASE WHEN START_DATETIME IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_START_DATETIME
, COUNT(DISTINCT CASE WHEN START_DATETIME IS NOT NULL AND START_DATETIME <> '' THEN START_DATETIME ELSE 0 END) as TOTAL_DISTINTOS_START_DATETIME
, SUM(CASE WHEN END_DATETIME IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_END_DATETIME
, COUNT(DISTINCT CASE WHEN END_DATETIME IS NOT NULL AND END_DATETIME <> '' THEN END_DATETIME ELSE 0 END) as TOTAL_DISTINTOS_END_DATETIME
, SUM(CASE WHEN SERVICE IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_SERVICE
, COUNT(DISTINCT CASE WHEN SERVICE IS NOT NULL AND SERVICE <> '' THEN SERVICE ELSE 0 END) as TOTAL_DISTINTOS_SERVICE
, SUM(CASE WHEN FLG_TRANSFER IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_FLG_TRANSFER
, COUNT(DISTINCT CASE WHEN FLG_TRANSFER IS NOT NULL AND FLG_TRANSFER <> '' THEN FLG_TRANSFER ELSE 0 END) as TOTAL_DISTINTOS_FLG_TRANSFER
, SUM(CASE WHEN AGENT IS NOT NULL THEN 1 ELSE 0 END) as TOTAL_AGENT
, COUNT(DISTINCT CASE WHEN AGENT IS NOT NULL AND AGENT <> '' THEN AGENT ELSE 0 END) as TOTAL_DISTINTOS_AGENT
FROM STAGE.STG_CONTACTOS_IVR;

#Check duplicated ID's
SELECT ID, PHONE_NUMBER, COUNT(ID) TOTAL_REGISTROS
FROM STAGE.STG_CONTACTOS_IVR
GROUP BY 1,2
HAVING COUNT(ID) > 1;

#Check 
SELECT *
FROM STAGE.STG_CONTACTOS_IVR;